version: 2.1

orbs:
  codacy: codacy/base@2.0.1
  codacy_plugins_test: codacy/plugins-test@0.7.1

jobs:
  unit_test:
    docker:  # run the steps with Docker
      - image: circleci/elixir:1.10.1
    steps:
      - checkout
      - run:
          name: Install Hex locally and fetch copy of rebar
          command: mix do local.hex --force, local.rebar --force
      - run:
          name: Get dependencies
          command: mix deps.get
      - run:
          name: Compile dependencies
          command: mix deps.compile
      - run:
          name: Run tools native tests
          command: mix test

workflows:
  version: 2
  compile_test_deploy:
    jobs:
      - codacy/checkout_and_version
      - unit_test:
          requires:
            - codacy/checkout_and_version
      - codacy/shell:
          name: publish_docker_local
          cmd: |
            ./build.sh $CIRCLE_PROJECT_REPONAME latest
            docker save --output docker-image.tar $CIRCLE_PROJECT_REPONAME:latest
          persist_to_workspace: true
          requires:
            - codacy/checkout_and_version
      - codacy_plugins_test/run:
          name: plugins_test
          run_multiple_tests: true
          run_pattern_tests: false
          requires:
            - publish_docker_local
      - codacy/shell:
          name: publish_dockerhub
          context: CodacyDocker
          cmd: |
            docker load --input docker-image.tar
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker tag $CIRCLE_PROJECT_REPONAME codacy/$CIRCLE_PROJECT_REPONAME:$(cat .version)
            docker tag $CIRCLE_PROJECT_REPONAME codacy/$CIRCLE_PROJECT_REPONAME:latest
            docker push codacy/$CIRCLE_PROJECT_REPONAME:$(cat .version)
            docker push codacy/$CIRCLE_PROJECT_REPONAME:latest
          requires:
            - plugins_test
            - unit_test
          filters:
            branches:
              only:
                - master
      - codacy/tag_version:
          name: tag_version
          context: CodacyAWS
          requires:
            - publish_dockerhub
